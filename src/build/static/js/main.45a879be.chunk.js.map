{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo.js","app.js","index.js"],"names":["TodoForm","props","useState","item","changeItem","handleInputChange","e","target","name","value","Form","onSubmit","preventDefault","reset","handleSubmit","Card","style","width","Body","Title","Group","controlId","Label","Control","placeholder","onChange","type","defaultValue","min","max","Button","variant","TodoList","ListGroup","list","map","Item","as","className","complete","toString","key","_id","onClick","handleComplete","text","ToDo","setList","useEffect","difficulty","assignee","Container","fluid","Row","filter","length","Col","Math","random","id","i","newList","listItem","App","Navbar","bg","expand","Nav","Link","href","React","Component","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.45a879be.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nconst TodoForm = (props) => {\n\n  const [item, changeItem] = useState({});\n\n\nconst handleInputChange = (e) => {\n    changeItem({ item, [e.target.name]: e.target.value });\n  };\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    changeItem({});\n  };\n\n    return (\n      <>\n       <Form onSubmit={handleSubmit}>\n        <Card style={{ width: '22rem' }}>\n          <Card.Body>\n            <Card.Title><h3>Add To Do Item</h3></Card.Title>\n       \n          <Form.Group controlId=\"formAddItem\">\n          <Form.Label><h5>To Do Item</h5></Form.Label>\n          <Form.Control name=\"text\"\n              placeholder=\"Item Details\"\n              onChange={handleInputChange}/>\n          </Form.Group>\n        <Form.Group controlId=\"formAssign\">\n          <Form.Label><h5>Assigned To</h5></Form.Label>\n            <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Asignee Name\" onChange={handleInputChange}/>\n          \n          </Form.Group>\n          <Form.Group controlId=\"formDifficulty\">\n          <Form.Label><h5>Difficulty Rating</h5></Form.Label>\n          <Form.Control defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange}/>\n          </Form.Group>\n\n\n          <Button variant=\"primary\" type=\"submit\">Add Item</Button>{' '}\n        \n        </Card.Body>\n        </Card>\n        </Form>\n      </>\n    );\n  }\n\nexport default TodoForm;\n","import React from 'react';\nimport { ListGroup, Card } from 'react-bootstrap';\n\nconst TodoList = (props) => {\n\n    return (\n      <>\n      <Card>\n      <ListGroup >\n        {props.list.map(item => (\n          <ListGroup.Item as=\"li\" variant=\"success\"\n            className={`complete-${item.complete.toString()}`}\n            key={item._id} onClick={() => props.handleComplete(item._id)}>\n              {item.text}\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n      </Card>\n      </>\n    );\n  }\n\nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n\nimport './todo.scss';\n\nconst ToDo = () => {\n\n  const [list, setList] = useState([]);\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n\n  };\n\n  //use a useEffect to preload the seeded todo Items\n  useEffect(() => {\n    let list = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n    ];\n\n    setList(list);\n  }, []);\n\n\n\n  return (\n    <>\n      <Container fluid>\n        <Row fluid variant=\"dark\">\n          <header>\n            <h2>\n              To Do List Manager ({list.filter(item => !item.complete).length})\n          </h2>\n          </header>\n        </Row>\n\n        <Row>\n          <section className=\"todo\">\n            <Col>\n              <div>\n                <TodoForm handleSubmit={addItem} />\n              </div>\n            </Col>\n            <Col>\n            <div>\n              <TodoList\n                list={list}\n                handleComplete={toggleComplete}\n              />\n            </div>\n            </Col>\n          </section>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default ToDo;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ToDo from './components/todo/todo.js';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n      <style type=\"text/css\">\n        {`\n        .mr-auto {\n          color: white;\n        }\n        `}\n        \n      </style>\n      <Navbar bg=\"primary\" variant=\"light\" expand=\"lg\">\n        <Nav className=\"mr-auto\">\n          \n        <Nav.Link href=\"/\">Home</Nav.Link>\n        </Nav>\n      </Navbar>\n        <ToDo />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}